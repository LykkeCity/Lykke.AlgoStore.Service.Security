//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lykke.AlgoStore.Service.Security.Services.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Phrases {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Phrases() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lykke.AlgoStore.Service.Security.Services.Strings.Phrases", typeof(Phrases).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client with id {0} does not exist..
        /// </summary>
        public static string ClientDoesNotExist {
            get {
                return ResourceManager.GetString("ClientDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientId cannot be empty.
        /// </summary>
        public static string ClientIdEmpty {
            get {
                return ResourceManager.GetString("ClientIdEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permission with id {0} does not exist..
        /// </summary>
        public static string PermissionDoesNotExist {
            get {
                return ResourceManager.GetString("PermissionDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PermissionId is empty.
        /// </summary>
        public static string PermissionIdEmpty {
            get {
                return ResourceManager.GetString("PermissionIdEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The permissions of this role cannot be modified..
        /// </summary>
        public static string PermissionsAreImmutable {
            get {
                return ResourceManager.GetString("PermissionsAreImmutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role with id {0} does not exist..
        /// </summary>
        public static string RoleDoesNotExist {
            get {
                return ResourceManager.GetString("RoleDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RoleId is empty.
        /// </summary>
        public static string RoleIdEmpty {
            get {
                return ResourceManager.GetString("RoleIdEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This role can&apos;t be modified..
        /// </summary>
        public static string RoleIsImmutable {
            get {
                return ResourceManager.GetString("RoleIsImmutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role {0} already exists..
        /// </summary>
        public static string RoleNameExists {
            get {
                return ResourceManager.GetString("RoleNameExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role name is required..
        /// </summary>
        public static string RoleNameRequired {
            get {
                return ResourceManager.GetString("RoleNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current user does not belong to &apos;User&apos; role..
        /// </summary>
        public static string UserRoleNotAssigned {
            get {
                return ResourceManager.GetString("UserRoleNotAssigned", resourceCulture);
            }
        }
    }
}
